Dump	==========================================================
Read	.etc.default.useradd."expire" 0
Read	.etc.default.useradd."group" 100
Read	.etc.default.useradd."groups" "audio,video"
Read	.etc.default.useradd."home" "/home"
Read	.etc.default.useradd."inactive" 0
Read	.etc.default.useradd."shell" 0
Read	.etc.default.useradd."skel" 0
Read	.target.string "/etc/shells" 0
Read	.etc.nsswitch_conf.passwd 0
Read	.etc.nsswitch_conf.passwd 0
Write	.target.ycp "/var/lib/YaST2/users.ycp" $[] true
Return	
Dump	local user names:
Dump	 ["hh", "ii"]
Dump	local group names:
Dump	 ["users"]
Dump	---- current group:
Dump	 $[]
Return	
Dump	---- current group (empty add, to get default values):
Dump	 $["gidnumber":"1000", "plugins":[], "type":"local", "what":"add_group"]
Return	
Dump	---- current group (after rich add):
Dump	 $["cn":"testgrp", "gidnumber":"555", "password":"x", "plugins":[], "type":"local", "userlist":$["hh":"1"], "what":"add_group"]
Execute	.target.bash_output "echo 'testgrp' | grep '^[[:alpha:]_][[:alnum:]_.-]*[[:alnum:]_.$-]\\?$'" $["LANG":"C"] $["stdout":"testgrp"]
Return	
Dump	---- check group after add:
Dump	 
Dump	---- user 'hh':
Dump	 $["addit_data":"", "cn":"HaHa", "gidnumber":"100", "grouplist":$[], "groupname":"users", "homedirectory":"/home/hh", "loginshell":"/bin/bash", "shadowexpire":"", "shadowflag":"", "shadowinactive":"", "shadowlastchange":"13727", "shadowmax":"99999", "shadowmin":"0", "shadowwarning":"7", "type":"local", "uid":"hh", "uidnumber":"500", "userpassword":"heslo"]
Return	true
Dump	---- user 'hh':
Dump	 $["addit_data":"", "cn":"HaHa", "gidnumber":"100", "grouplist":$["testgrp":"1"], "groupname":"users", "homedirectory":"/home/hh", "loginshell":"/bin/bash", "org_homedirectory":"/home/hh", "org_uid":"hh", "org_uidnumber":"500", "shadowexpire":"", "shadowflag":"", "shadowinactive":"", "shadowlastchange":"13727", "shadowmax":"99999", "shadowmin":"0", "shadowwarning":"7", "type":"local", "uid":"hh", "uidnumber":"500", "userpassword":"heslo", "what":"group_change"]
Dump	==========================================================
Dump	local group names:
Dump	 ["testgrp", "users"]
Dump	================= gid conflict (not fatal any more) ======
Return	
Return	
Dump	---- current group after add:
Dump	 $["cn":"new", "gidnumber":"0", "plugins":[], "type":"system", "what":"add_group"]
Execute	.target.bash_output "echo 'new' | grep '^[[:alpha:]_][[:alnum:]_.-]*[[:alnum:]_.$-]\\?$'" $["LANG":"C"] $["stdout":"new"]
Return	
Dump	---- check group after add:
Dump	 
Dump	================= name conflict ==========================
Return	
Return	
Dump	---- current group after add):
Dump	 $["cn":"testgrp", "gidnumber":"1000", "plugins":[], "type":"local", "what":"add_group"]
Execute	.target.bash_output "echo 'testgrp' | grep '^[[:alpha:]_][[:alnum:]_.-]*[[:alnum:]_.$-]\\?$'" $["LANG":"C"] $["stdout":"testgrp"]
Return	There is a conflict between the entered
Dump	---- check group after add:
Dump	 There is a conflict between the entered
Dump	group name and an existing group name.
Dump	Try another one.
Dump	================= name too short =========================
Return	
Return	
Dump	---- current group after add:
Dump	 $["cn":"t", "gidnumber":"1000", "plugins":[], "type":"local", "what":"add_group"]
Return	The group name must be between 2 and 32 characters in length.
Dump	---- check group after add:
Dump	 The group name must be between 2 and 32 characters in length.
Dump	Try again.
