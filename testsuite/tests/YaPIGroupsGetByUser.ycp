/**
 * $Id$
 */

{
    // testedfiles: Users.pm UsersLDAP.pm USERS.pm

    include "testsuite.ycp";

    map R = $[
	"passwd": $[
	    "local": $[
		"users": $[
		    500: $[
			"uid"		: "hh",
			"uidnumber"	: 500,
			"userpassword"	: "password",
			"type"		: "local",
			"gidnumber"	: 100,
			"grouplist"	: $[
			    "some_group"	: 1,
			    "users"		: 1
			]
		    ],
		    "by_name": $[
			"hh":	500,
		    ],
		    "last_uid": 500,
		    "homes":	$[
			"/home/hh":	1,
		    ],
		    "usernames": $[
			"hh":		1,
		    ],
		    "uids": $[
			500:		1,
		    ]
		],
		"shadow": $[
		],
		"groups": $[
		    100: $[
			"cn"	:	"users",
			"gidnumber":	100,
			"type"	:	"local",
		    ],
		    200: $[
			"cn"	:	"some_group",
			"gidnumber":	200,
			"type"	:	"local"
		    ],
		    "by_name": $[
			"users"		: 100,
			"some_group"	: 200
		    ],
		    "gids": $[
			100		: 1,
			200		: 1
		    ],
		    "groupnames": $[
			"users"		: 1,
			"some_group"	: 1,
		    ]
		],
	    ],
	    "system": $[
		"users": $[
		    0:	$[
			"uid"		: "root",
			"uidnumber"	: 0,
			"grouplist"	: $[
			    "root"	: 1,
			    "some_group": 1
			]
		    ],
		    "by_name": $[
			"root"		: 0
		    ],
		    "last_uid": 0,
		    "homes":	$[
		    ],
		    "usernames": $[
			"root"		: 1,
		    ],
		    "uids": $[
			0		: 1
		    ],
		],
		"shadow": $[
		],
		"groups": $[
		    0: $[
			"cn":	"root",
			"gidnumber":	0,
			"type"	:	"system"
		    ],
		    "by_name": $[
			"root"	: 0
		    ],
		    "gids": $[
			0	: 1
		    ],
		    "groupnames": $[
			"root"	: 1
		    ]
		],
	    ],
	    "passwd": $[
		"pluslines": ["+"]
	    ]
	],
	"etc" : $[
	    "fstab": [],
	    "cryptotab": [],
	    "default": $[
		"useradd": $[
		    "home":	"/tmp/local/home",
		    "groups":	"audio,video",
		    "group":	100
		]
	    ],
	],
	"target": $[
	    "stat"	: $[],
	    "size"	: 0,
	    "tmpdir"	: "/tmp/YaST"
	],
	"product": $[
		"features": $[
		    "USE_DESKTOP_SCHEDULER"	: "no",
		    "IO_SCHEDULER"		: "",
		    "ENABLE_AUTOLOGIN"		: "false",
		    "UI_MODE"			: "simple",
		    "EVMS_CONFIG"		: "no"
		]
	],
    ];
    map W = $[];
    map E = $[
	"passwd" : $[
	    "init"	: true
	],
	"target": $[
	    "mkdir"	: true,
	    "bash"	: -1,
	],
    ];

    import "YaPI::USERS";
    import "Mode";

    Mode::SetTest ("test");

    DUMP ("==========================================================");

    map<string,any> config_map  = $[
	"type"		: "local",
	"index"		: "cn",
    ];
    map<string,any> user_map  = $[];

    DUMP ("============ get groups (no user) ===================");
    TEST (``(YaPI::USERS::GroupsGetByUser (config_map, user_map)), [R,W,E], 0);
    DUMP ("============ get done ============================");

    user_map  = $[
	"uid"		: "hhh",
    ];

    DUMP ("============ get groups (wrong user) ===================");
    TEST (``(YaPI::USERS::GroupsGetByUser (config_map, user_map)), [R,W,E], 0);
    DUMP ("============ get done =================================");

    user_map  = $[
	"uid"		: "hh",
    ];

    DUMP ("============ get groups (ok) ==========================");
    TEST (``(YaPI::USERS::GroupsGetByUser (config_map, user_map)), [R,W,E], 0);
    DUMP ("============ get done =================================");

    user_map  = $[
	"uidnumber"	: 0,
	"type"		: "system"
    ];
    config_map	= $[];

    DUMP ("============ get groups (by uid number + different types)");
    TEST (``(YaPI::USERS::GroupsGetByUser (config_map, user_map)), [R,W,E], 0);
    DUMP ("============ get done =================================");

}
