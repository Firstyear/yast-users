Dump	==========================================================
Read	.etc.default.useradd."expire" 0
Read	.etc.default.useradd."group" 100
Read	.etc.default.useradd."groups" "audio,video"
Read	.etc.default.useradd."home" "/home"
Read	.etc.default.useradd."inactive" 0
Read	.etc.default.useradd."shell" 0
Read	.etc.default.useradd."skel" 0
Read	.target.string "/etc/shells" 0
Read	.etc.nsswitch_conf.passwd 0
Read	.etc.nsswitch_conf.passwd 0
Write	.target.ycp "/var/lib/YaST2/users.ycp" $[] true
Return	
Dump	---- current user:
Dump	 $[]
Return	
Dump	---- current user (empty add):
Dump	 $["chown_home":true, "cn":"", "create_home":true, "gidnumber":"100", "grouplist":$["audio":"1", "video":"1"], "groupname":"users", "loginshell":"", "plugins":[], "shadowexpire":"", "shadowflag":"", "shadowinactive":"", "shadowlastchange":"0", "shadowmax":"99999", "shadowmin":"0", "shadowwarning":"7", "type":"local", "uidnumber":"1000", "userpassword":nil, "what":"add_user"]
Return	
Dump	---- current user (after rich add):
Dump	 $["chown_home":true, "cn":"", "create_home":true, "encrypted":true, "gidnumber":"100", "grouplist":$["audio":"1"], "groupname":"users", "homedirectory":"/local/home/aaa", "loginshell":"", "plugins":[], "shadowexpire":"", "shadowflag":"", "shadowinactive":"", "shadowlastchange":"0", "shadowmax":"99999", "shadowmin":"0", "shadowwarning":"7", "text_userpassword":"qqqqq", "type":"local", "uid":"aaa", "uidnumber":"501", "userpassword":"crypted_qqqqq", "what":"add_user"]
Execute	.target.bash_output "echo 'aaa' | grep '^[[:alpha:]_][[:alnum:]_.-]*[[:alnum:]_.$-]\\?$'" $["LANG":"C"] $["stdout":"aaa"]
Return	
Dump	---- current group (before user commit):
Dump	 $["cn":"users", "gidnumber":"100", "more_users":$["hh":"1", "ii":"1"], "type":"local", "userlist":$[], "userpassword":"x"]
Dump	---- check user after add:
Dump	 
Dump	---- commit user:
Return	true
Dump	---- current group (afer user commit):
Dump	 $["cn":"users", "gidnumber":"100", "more_users":$["aaa":"1", "hh":"1", "ii":"1"], "org_cn":"users", "org_gidnumber":"100", "type":"local", "userlist":$[], "userpassword":"x", "what":"user_change_default"]
Dump	=================== no password ==========================
Return	
Return	
Dump	---- current user (minimal add, used default values):
Dump	 $["chown_home":true, "cn":"", "create_home":true, "gidnumber":"100", "grouplist":$["audio":"1", "video":"1"], "groupname":"users", "homedirectory":"/home/hhh", "loginshell":"", "plugins":[], "shadowexpire":"", "shadowflag":"", "shadowinactive":"", "shadowlastchange":"0", "shadowmax":"99999", "shadowmin":"0", "shadowwarning":"7", "type":"local", "uid":"hhh", "uidnumber":"1000", "userpassword":nil, "what":"add_user"]
Execute	.target.bash_output "echo 'hhh' | grep '^[[:alpha:]_][[:alnum:]_.-]*[[:alnum:]_.$-]\\?$'" $["LANG":"C"] $["stdout":"hhh"]
Return	No password entered.
Dump	---- check user after add:
Dump	 No password entered.
Dump	Try again.
Dump	==================== username conflict ========================
Return	
Return	
Dump	---- current user (just added):
Dump	 $["chown_home":true, "cn":"", "create_home":true, "encrypted":true, "gidnumber":"100", "grouplist":$["audio":"1", "video":"1"], "groupname":"users", "homedirectory":"/home/root", "loginshell":"", "plugins":[], "shadowexpire":"", "shadowflag":"", "shadowinactive":"", "shadowlastchange":"0", "shadowmax":"99999", "shadowmin":"0", "shadowwarning":"7", "text_userpassword":"qqqqq", "type":"local", "uid":"root", "uidnumber":"1000", "userpassword":"crypted_qqqqq", "what":"add_user"]
Execute	.target.bash_output "echo 'root' | grep '^[[:alpha:]_][[:alnum:]_.-]*[[:alnum:]_.$-]\\?$'" $["LANG":"C"] $["stdout":"root"]
Return	There is a conflict between the entered
Dump	---- check user after add:
Dump	 There is a conflict between the entered
Dump	username and an existing username. 
Dump	Try another one.
Dump	==================== uidnumber problems ===================
Return	
Return	
Dump	---- current user (just added):
Dump	 $["chown_home":true, "cn":"", "create_home":true, "encrypted":true, "gidnumber":"100", "grouplist":$["audio":"1", "video":"1"], "groupname":"users", "homedirectory":"/home/rrr", "loginshell":"", "plugins":[], "shadowexpire":"", "shadowflag":"", "shadowinactive":"", "shadowlastchange":"0", "shadowmax":"99999", "shadowmin":"0", "shadowwarning":"7", "text_userpassword":"qqqqq", "type":"local", "uid":"rrr", "uidnumber":"5", "userpassword":"crypted_qqqqq", "what":"add_user"]
Return	The selected user ID is not allowed.
Dump	---- check user after add:
Dump	 The selected user ID is not allowed.
Dump	Select a valid integer between 1000 and 60000.
Dump	==================== uid content problems ===================
Return	nil
Return	
Return	
Dump	---- current user (just added):
Dump	 $["chown_home":true, "cn":"", "create_home":true, "encrypted":true, "gidnumber":"100", "grouplist":$["audio":"1", "video":"1"], "groupname":"users", "homedirectory":"/home/iii$", "loginshell":"", "plugins":[], "shadowexpire":"", "shadowflag":"", "shadowinactive":"", "shadowlastchange":"0", "shadowmax":"99999", "shadowmin":"0", "shadowwarning":"7", "text_userpassword":"qqqqq", "type":"local", "uid":"iii$", "uidnumber":"1000", "userpassword":"crypted_qqqqq", "what":"add_user"]
Execute	.target.bash_output "echo 'iii$' | grep '^[[:alpha:]_][[:alnum:]_.-]*[[:alnum:]_.$-]\\?$'" $["LANG":"C"] $["stdout":""]
Return	The username may contain only
Dump	---- check user after add:
Dump	 The username may contain only
Dump	letters, digits, "-", ".", and "_"
Dump	and must begin with a letter or "_".
Dump	Try again.
Dump	==================== uid for LDAP may contain '$' ==============
Return	
Return	
Dump	---- current user (just added):
Dump	 $["chown_home":true, "cn":"", "create_home":true, "dn":"uid=iii$,dc=suse,dc=cz", "encrypted":true, "gidnumber":"100", "grouplist":$["audio":"1", "video":"1"], "groupname":"users", "homedirectory":"/home/ldap/iii", "loginshell":"", "plugins":[], "shadowexpire":"", "shadowflag":"", "shadowinactive":"", "shadowlastchange":"0", "shadowmax":"99999", "shadowmin":"0", "shadowwarning":"7", "text_userpassword":"qqqqq", "type":"ldap", "uid":"iii$", "uidnumber":"1000", "userpassword":"crypted_qqqqq", "what":"add_user"]
Execute	.target.bash_output "echo 'iii' | grep '^[[:alpha:]_][[:alnum:]_.-]*[[:alnum:]_.$-]\\?$'" $["LANG":"C"] $["stdout":"iii"]
Return	
Dump	---- check user after add:
Dump	 
Dump	==========================================================
Dump	============== duplicated UID number =====================
Return	
Return	
Execute	.target.bash_output "echo 'admin' | grep '^[[:alpha:]_][[:alnum:]_.-]*[[:alnum:]_.$-]\\?$'" $["LANG":"C"] $["stdout":"admin"]
Return	
