{
    // testedfiles: Users.pm UserCache.pm

    include "testsuite.ycp";
    import "Users";
    import "UsersCache";
    import "Mode";
    import "Directory";
    import "Progress";
    import "Report";

    map READ = $[
	"passwd": $[
	    "local": $[
		"users": $[
		    500: $[
			"uid"		: "hh",
			"gecos"		: "HaHa",
			"gidnumber"	: 100,
			"uidnumber"	: 500
		    ],
		    600: $[
			"uid"		: "ii",
			"gecos"		: "Ia",
			"gidnumber"	: 100,
			"uidnumber"	: 600
		    ],
		    "by_name": $[
			"hh":	500,
			"ii":	600
		    ],
		    "last_uid": 600,
		    "homes":	$[
			"/home/hh":	1,
		    ],
		    "usernames": $[
			"hh":		1,
			"ii":		1,
		    ],
		    "uids": $[
			500:		1,
			600:		1
		    ]
		],
		"shadow": $[
		],
		"groups": $[
		    100: $[
			"cn"	:	"users",
			"gidNumber":	100,
			"type"	:	"local",
			"userlist"	: $[ "ii" : 1 ],
		    ],
		    "by_name": $[
			"users":	100,
		    ],
		    "gids": $[
			100:		1,
		    ],
		    "groupnames": $[
			"users":	1,
		    ]
		],
	    ],
	    "system": $[
		"users": $[
		    "by_name": $[
		    ],
		    "last_uid": 0,
		    "homes":	$[],
		    "usernames": $[],
		    "uids": $[],
		],
		"shadow": $[
		],
		"groups": $[
		    0: $[
			"cn":	"root",
			"gidNumber":	0,
			"type"	:	"system"
		    ],
		    "by_name": $[
			"root"	: 0
		    ],
		    "gids": $[
			0	: 1
		    ],
		    "groupnames": $[
			"root"	: 1
		    ]
		],
	    ],
	],
	"etc" : $[
	    "fstab": [],
	    "cryptotab": [],
	    "default": $[
		"useradd": $[
		    "home":	"/home",
		    "groups":	"audio,video",
		    "group":	100
		]
	    ],
	],
	"product": $[
		"features": $[
		    "USE_DESKTOP_SCHEDULER"	: "no",
		    "IO_SCHEDULER"		: "",
		    "ENABLE_AUTOLOGIN"		: "false",
		    "UI_MODE"			: "simple",
		    "EVMS_CONFIG"		: "no",
		    "INCOMPLETE_TRANSLATION_TRESHOLD"	: "99",
		]
	],
	"target": $[
	    "stat"	: $[],
	],
    ];

    map WRITE = $[];
    map EXEC = $[
	"passwd" : $[
	    "init"	: true
	],
	"target" : $[
	    "bash"	: -1,
	],
    ];

    DUMP ("==========================================================");

    Mode::SetTest ("test");

    TEST (``(Users::Read ()), [READ, WRITE, EXEC], 0);

    Users::SelectGroupByName ("users");

    map <string,any> group = Users::GetCurrentGroup ();
    DUMP (sformat ("---- current group:\n %1", group));

    DUMP ("---- create additional users list:\n");

    list additional = (list)
	TEST(``(UsersCache::BuildAdditional (group)), [ READ, WRITE], 0);

}
