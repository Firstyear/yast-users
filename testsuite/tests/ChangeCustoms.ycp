{

    include "testsuite.ycp";
    map I_READ = $[
	"target" : $[
	    "size" : -1,
	    "tmpdir" : "/tmp/",
	    "yast2" : nil,
	],
	"sysconfig" : $[
	    "console" : $[
		"CONSOLE_FONT" : "",
		"CONSOLE_SCREENMAP" : "",
		"CONSOLE_UNICODEMAP" : "",
		"CONSOLE_MAGIC" : "",
		"CONSOLE_ENCODING" : "",
	    ],
	    "language" : $[
		"RC_LANG" : "",
		"DEFAULT_LANGUAGE" : "",
	    ],
	],
	"etc" : $[
	    "install_inf" : $[
		"Cmdline" : "",
		"InstMode" : nil,
	    ],
	],
	"probe" : $[
	    "architecture" : "i386",
	    "has_apm" : true,
	    "has_pcmcia" : false,
	    "has_smp" : false,
	    "system" : [],
	    "memory" : [],
	    "cpu" : [],
	    "cdrom" : $[
		"manual" : [],
	    ],
	    "floppy" : $[
		"manual" : [],
	    ],
	],
    ];
    map I_WRITE = $[];
    map I_EXEC = $[];
    TESTSUITE_INIT ([I_READ, I_WRITE, I_EXEC], 0);

    import "Users";
    import "UsersCache";

    // items "produced" by build_nis_structures.pl
    map READ = $[
        "target": $[
            "ycp": [
                `item (`id (5000), "jsuchome", "", "5000", "users,audio,video"),
                `item (`id (5001), "nis_user", "", "5001", "users,audio"),
                ]
            ]
    ];
    // Execute is called from Users::RunPrepare("nis")
    map EX = $[
        "target": $[ "bash_output": $[] ]
    ];
    map WRITE = $[];


    UsersCache::users_itemlists ["local"] =
        [`item (`id (500), "aaa", "", "500", "users,audio")];

    UsersCache::user_itemlist = UsersCache::users_itemlists ["local"]:[];

    UsersCache::users_itemlists ["system"] =
        [`item (`id (0), "root", "", "0", "")];

    Users::user_custom_sets = ["local"];
    Users::nis_not_read = true;

    DUMP ( sformat ("actual user itemlist:\n %1", UsersCache::user_itemlist));

    DUMP ("==========================================================");
    DUMP ("===== adding nis users, not known -> read via script =====");
    DUMP ("==========================================================");

    list new = ["local", "nis"];

    DUMP ( sformat ("actual user customs: %1", Users::user_custom_sets) );
    DUMP ( sformat ("new user customs: %1", new) );

    DUMP ("= testing ================================================");

    TEST(``(Users::ChangeCustoms ("user", new)), [ READ, WRITE, EX ], 0);

    DUMP ( sformat ("new user itemlist:\n %1", UsersCache::user_itemlist) );

    DUMP ("==========================================================");
    DUMP ("===== adding system users, already known =================");
    DUMP ("==========================================================");

    new = ["local", "system"];

    DUMP ( sformat ("actual user customs: %1", Users::user_custom_sets) );
    DUMP ( sformat ("new user customs: %1", new) );

    DUMP ("= testing ================================================");

    TEST(``(Users::ChangeCustoms ("user", new)), [], 0);

    DUMP ( sformat ("new user itemlist:\n %1", UsersCache::user_itemlist) );


    DUMP ("==========================================================");
    DUMP ("===== adding nis users, already known ====================");
    DUMP ("==========================================================");

    new = ["local", "nis"];

    DUMP ( sformat ("actual user customs: %1", Users::user_custom_sets) );
    DUMP ( sformat ("new user customs: %1", new) );

    TEST(``(Users::ChangeCustoms ("user", new)), [ READ ], 0);

    DUMP ( sformat ("new user itemlist:\n %1", UsersCache::user_itemlist) );


}
