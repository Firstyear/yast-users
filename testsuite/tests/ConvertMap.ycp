/**
 * Test for UsersLDAP::ConvertMap
 * Author:	Jiri Suchomel <jsuchome@suse.cz>
 * $Id$
 */
{
    // testedfiles: Users.pm UsersLDAP.pm

    import "Testsuite";
    import "Users";
    import "Mode";
    import "Directory";
    import "UsersLDAP";

    map READ = $[
	"product": $[
		"features": $[
		    "USE_DESKTOP_SCHEDULER"	: "no",
		    "IO_SCHEDULER"		: "",
		    "ENABLE_AUTOLOGIN"		: "false",
		    "UI_MODE"			: "simple",
		    "EVMS_CONFIG"		: "no",
		    "INCOMPLETE_TRANSLATION_TRESHOLD"	: "99",
		]
	],
	"ldap" : $[
	    "schema": $[
		"oc": $[
		    "may": [
			"gidnumber", "gecos", "objectclass", "uid", "uidnumber",
			"userpassword", "loginshell"
		    ],
		],
	    ],
	],
    ];
    map WRITE = $[];
    map EXEC = $[];

    Testsuite::Dump ("==========================================================");

    Mode::SetTest ("test");

    map<string,any> user = $[
	"dn"		: "uid=test2,ou=people,dc=suse,dc=cz",
	"gidnumber"	: 100,
	"groupname"	: "users",
	"encrypted"	: true,
	"gecos"		: "test",
	"grouplist"	: $[ "audio" : 1 ],
	"loginshell"	: "/bin/csh",
	"modified"	: "edited",
	"objectclass"	: [ "inetOrgPerson", "posixAccount", "shadowAccount", "top" ],
	"org_uid"	: "test2",
	"org_uidnumber"	: 11111,
	"plugins"	: [ "UsersPluginLDAPAll" ],
	"type"		: "ldap",
	"uid"		: "test2",
	"uidnumber"	: 11111,
	"userpassword"	: "{crypt}IVj2W92x/IuFs",
	"what"		: "edit_user",

	"org_user"	: $[
	    "dn"		: "uid=test2,ou=people,dc=suse,dc=cz",
	    "gidnumber"		: 100,
	    "groupname"		: "users",
	    "gecos"		: "test",
	    "loginshell"	: "/bin/bash",
	    "grouplist"		: $[ "audio" : 1 ],
	    "objectclass"	: [ "inetOrgPerson", "posixAccount", "shadowAccount", "top" ],
	    "type"		: "ldap",
	    "uid"		: "test2",
	    "uidnumber"		: 11111,
	    "userpassword"	: "{crypt}IVj2W92x/IuFs",
	]
    ];

    Testsuite::Dump (sformat ("--------- user (loginshell is changed):\n %1", user));

    map<string,any> converted = (map<string,any>) Testsuite::Test(``(UsersLDAP::ConvertMap (user)), [READ,WRITE,EXEC], 0);

    Testsuite::Dump (sformat ("--------- converted :\n %1", converted));

    Testsuite::Dump ("==========================================================");

    user["userpassword"]	= "qqqqq";

    Testsuite::Dump (sformat ("--------- user (new password):\n %1", user));

    converted = (map<string,any>) Testsuite::Test(``(UsersLDAP::ConvertMap (user)), [READ,WRITE,EXEC], 0);

    Testsuite::Dump (sformat ("--------- converted :\n %1", converted));

    Testsuite::Dump ("==========================================================");

    user["objectclass"]	= [ "inetOrgPerson", "posixAccount", "shadowAccount", "top", "sambasamaccount" ];
    user["userpassword"]		= converted["userpassword"]:"";
    user["org_user", "userpassword"]	= converted["userpassword"]:"";

    Testsuite::Dump (sformat ("--------- user (new object class):\n %1", user));

    converted = (map<string,any>) Testsuite::Test(``(UsersLDAP::ConvertMap (user)), [READ,WRITE,EXEC], 0);

    Testsuite::Dump (sformat ("--------- converted :\n %1", converted));

    Testsuite::Dump ("==========================================================");

    user	= remove (user, "org_user");

    Testsuite::Dump (sformat ("--------- user (removed 'org_user' submap):\n %1", user));

    converted = (map<string,any>) Testsuite::Test(``(UsersLDAP::ConvertMap (user)), [READ,WRITE,EXEC], 0);

    Testsuite::Dump (sformat ("--------- converted :\n %1", converted));

}
