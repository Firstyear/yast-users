{

    include "testsuite.ycp";
    map I_READ = $[
	"target" : $[
	    "size" : -1,
	    "tmpdir" : "/tmp/",
	    "yast2" : nil,
	],
	"sysconfig" : $[
	    "console" : $[
		"CONSOLE_FONT" : "",
		"CONSOLE_SCREENMAP" : "",
		"CONSOLE_UNICODEMAP" : "",
		"CONSOLE_MAGIC" : "",
		"CONSOLE_ENCODING" : "",
	    ],
	    "language" : $[
		"RC_LANG" : "",
		"DEFAULT_LANGUAGE" : "",
	    ],
	],
	"etc" : $[
	    "install_inf" : $[
		"Cmdline" : "",
		"InstMode" : nil,
	    ],
	],
	"probe" : $[
	    "architecture" : "i386",
	    "has_apm" : true,
	    "has_pcmcia" : false,
	    "has_smp" : false,
	    "system" : [],
	    "memory" : [],
	    "cpu" : [],
	    "cdrom" : $[
		"manual" : [],
	    ],
	    "floppy" : $[
		"manual" : [],
	    ],
	],
    ];
    map I_WRITE = $[];
    map I_EXEC = $[
	"target" : $[
	    "bash_output" : $[],
	],
    ];
    TESTSUITE_INIT ([I_READ, I_WRITE, I_EXEC], 0);

    import "Users";

    Users::groups ["local" ] = $[
        100: $[ "groupname": "users", "userlist":"", "more_users": "hh","type": "local" ],
        17:  $[ "groupname": "audio", "userlist":"hh,ab", "more_users": "","type": "local" ]
    ];

    Users::groups ["ldap" ] = $[
        100: $[ "groupname": "users", "uniqueMember": [ "uid=hh" ],
		"more_users": "u1,u2","type": "ldap" ]
    ];

    DUMP (sformat ("local groups::\n %1", Users::groups ["local"]:$[]));

    DUMP (sformat ("ldap groups::\n %1", Users::groups ["ldap"]:$[]));

    DUMP ("==========================================================");

    string user = "hh";
    string dn = "uid=hh";
    DUMP ( sformat("user %1 is in groups:", user) );

    TEST(``(Users::FindGroupsBelongUser (user, dn)), [], 0);

    DUMP ("==========================================================");

    user = "ab";
    DUMP ( sformat("user %1 is in groups:", user) );

    TEST(``(Users::FindGroupsBelongUser (user, "")), [], 0);

    DUMP ("==========================================================");

    user = "abc";
    DUMP ( sformat("user %1 is in groups:", user) );

    TEST(``(Users::FindGroupsBelongUser (user, "")), [], 0);

}
