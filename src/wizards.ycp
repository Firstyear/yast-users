/**
 * File:	include/users/wizards.ycp
 * Package:	Configuration of users and groups
 * Summary:	Wizards definitions
 * Authors:	Johannes Buchhold <jbuch@suse.de>,
 *          Jiri Suchomel <jsuchome@suse.cz>
 *
 * $Id$
 */

{

textdomain "users";

import "Wizard";
import "Mode";

import "Popup";
import "Label";
include "wizard/sequencer.ycp";

include "users/complex.ycp";
include "users/dialogs.ycp";



/**
 * Whole configuration of users/groups
 * @param start the first dialog
 * @return sequence result
 */
global define symbol UsersSequence(string start) ``{

    map aliases = $[
    "read"  : [ ``( ReadDialog(!Mode::cont)), true ],
	"main"	:   ``( MainSequence( start ) ),
	"write" : [ ``( WriteDialog( true )), true ]// true as parameter ??
    ];

    map sequence = $[
	"ws_start" : "read",
	"read" : $[
	    `abort	: `abort,
	    `next	: "main",
        `nextmodule: `next // this is for skiping users conf during install,
                           // see Users::CheckHomeMounted() or bug #20365
	],
	"main" : $[
	    `abort	: `abort,
	    `next	: "write",
        `nosave : `next
	],
	"write" : $[
	    `abort	: `abort,
	    `next	: `next
	]
    ];

    string caption = _("User and Group Configuration");
    term contents = `Label(_("Initializing ..."));

    if( ! Mode::cont )
    {
	    Wizard::CreateDialog();
    }

    Wizard::SetContentsButtons(caption, contents, "",
	    Label::BackButton(), Label::NextButton());

    any ret = WizardSequencer(aliases, sequence);

    if( ! Mode::cont )
	    UI::CloseDialog();

    return ret;
}

/**
 * Whole configuration of users/groups but without reading and writing.
 * For use with autoinstallation.
 * @param start the first dialog
 * @return sequence result
 */
global define symbol AutoSequence(string start) ``{
    string caption = _("User and Group Configuration");
    term contents = `Label(_("Initializing ..."));

    Wizard::CreateDialog();
    Wizard::SetContentsButtons(caption, contents, "",
	    Label::BackButton(), Label::NextButton());

    any ret = MainSequence(start);

    UI::CloseDialog();
    return ret;
}

/**
 * Main workflow of the users/groups configuration
 * @param start the first dialog
 * @return sequence result
 */
global define symbol MainSequence(string start) ``{

    map aliases = $[
	"users":            ``(UsersDialog()),
	"user_add":         ``(EditUserDialog("add_user")),
	"user_add_inst":    ``(EditUserDialog("add_user")),
	"user_inst_start":  [``(usersInstStart ()), true],
	"user_edit":        ``(EditUserDialog("edit_user")),
	"user_details":     ``(EditUserDetailsDialog()),
	"user_password":    ``(EditUserPasswordDialog()),
	"user_ldap":		``(LDAPSettingsDialog("user")),
	"user_save":        [``(UserSave()), true],
	"user_setup":	    [ ``(userSetup ()), true],

	"groups":           ``(GroupsDialog()),
	"group_add":        ``(EditGroupDialog("add_group")),
	"group_edit":       ``(EditGroupDialog("edit_group")),
	"group_ldap":		``(LDAPSettingsDialog("group")),
	"group_save":       [``(GroupSave()), true],

	"defaults":         ``(DefaultsDialog()),
	"auth":			``(AuthentizationDialog()),
	"without_save":     ``(ReallyAbort()),
    ];

    map main_sequence = $[
    "ws_start":             start,
    "users":$[
            `switch_groups:	"groups",
            `users:		"users",
	    `new:		"user_add",
	    `edit:		"user_edit",
	    `delete:		"user_save",
            `defaults:		"defaults",
	    `auth:		"auth",
	    `next:		`next,
	    `abort:		"without_save",
	    `cancel:		"without_save",
            `nosave:		`nosave,
	    `exit:		`abort ],
    "user_add": $[
            `nextmodule:	`next,
	    `nosave:		"users",
	    `additional:	"user_setup", // only install
	    `next:		"user_save",  // -> Commit
	    `details:		"user_details",
	    `passwordsettings:	"user_password",
	    `ldap:		"user_ldap",
	    `abort:		"without_save",
	    `cancel:		"without_save",
	    `back:		"users" ],
    "user_add_inst": $[
            `nextmodule:    `next, // no user and next pressed (install)
            `nosave:        "users", // no "first user" was added (install)
            `additional:    "user_setup",
            `next:          "user_save",
            `details:       "user_details",
            `passwordsettings:  "user_password",
            `abort:         "without_save",
            `cancel:        "without_save",
            `back:          "users" ], // is it OK ??
    "user_edit": $[
            `next:		"user_save",
	    `details:		"user_details",
	    `passwordsettings:	"user_password",
	    `ldap:		"user_ldap",
	    `cancel:		"without_save",
	    `abort:		"without_save" ],
    "user_inst_start": $[
            `next:          "user_add_inst"], // is this needed ??
    "user_setup": $[
            `next :         "user_save" ],
    "user_details": $[
	    // next is predefined to add or edit
            `abort:		"without_save",
	    `cancel:		"without_save",
	    `add_user:		"user_add",
	    `edit_user:		"user_edit",
	    `ldap:		"user_ldap",
	    ],
    "user_password": $[
            `abort:		"without_save",
	    `cancel:		"without_save",
	    `add_user:		"user_add",
	    `edit_user:		"user_edit"],
    "user_ldap": $[
            `abort:		"without_save",
	    `cancel:		"without_save",
	    `add_user:		"user_add",
	    `edit_user:		"user_edit"],
    "user_save": $[
            `next:	        "users",
	    `save:          `next], // this should be write - during install ??
    "groups": $[
            `switch_users:  "users",
	    `new:           "group_add",
	    `edit:          "group_edit",
            `delete:        "group_save",
	    `next:          `next,
	    `abort:         "without_save",
	    `cancel:        "without_save",
            `nosave:        `nosave,
	    `exit:          `abort ],
    "group_add": $[
	    `nosave:		"groups",
            `next:		"group_save",
            `abort:		"without_save",
	    `cancel:		"without_save",
	    `ldap:		"group_ldap",
	    `back:		"groups" ],
    "group_edit": $[
            `next:		"group_save",
            `cancel:		"without_save",
	    `ldap:		"group_ldap",
	    `abort:		"without_save" ],
    "group_ldap": $[
	    `next:		"group_save",
	    `abort:		"without_save" ],
    "group_save"  : $[
            `next:		"groups"],
	"defaults": $[
	    `abort:         "without_save",
            `next:          "users"],
        "auth": $[
	    `abort:         "without_save",
            `next:          "users"],
	"without_save": $[
            `next  :        `next,
	    `abort :        `abort,
	    `back  :        `back   ],
    ];

    return WizardSequencer(aliases, main_sequence);
}

/* EOF */
}
